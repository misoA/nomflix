{"version":3,"sources":["assets/noPosterSmall.png","assets/imdb.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Poster.js","Components/Message.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Profile.js","Components/Season.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","Grid","Section","title","children","Loader","role","aria-label","Image","bgUrl","Rating","span","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","Text","color","Message","text","HomePresenter","nowPlaying","upcoming","popular","loading","error","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","interceptors","request","use","config","params","MoviesApi","get","append_to_response","term","query","encodeURIComponent","TVApi","CollectionApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","updateTerm","handleSubmit","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searcyByTerm","target","a","ProfileContainer","isCreator","ProfileTitle","Profile","result","p","logo_path","profile_path","name","AirDate","Season","posterPath","airDate","Backdrop","Content","Cover","Data","h3","ItemContainer","ItemImage","img","ItemButton","withComponent","Divider","Overview","ColletionContainer","ColletionImage","Seasons","SeasonsGrid","MadeBy","VideoContainer","SubTitle","VideoImage","iframe","VideoLink","DetailPresenter","backdrop_path","imdb_id","href","src","alt","runtime","episode_run_time","genres","genre","index","production_countries","i","iso_3166_1","origin_country","c","overview","belongs_to_collection","seasons","season","air_date","production_companies","created_by","videos","v","site","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","console","log","SubContent","SubOverview","ItemDivider","parts","original_language","genre_ids","CollectionContainer","CollectionPresenter","path","exact","component","Home","TV","Search","Detail","Collection","from","globalStyles","createGlobalStyle","reset","App","StrictMode","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35c1785f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","module.exports = __webpack_public_path__ + \"static/media/imdb.f383087f.png\";","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/'}>\n        <SLink to='/'>Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to='/tv'>TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to='/search'>Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Loading... | Nomfilx</title>\r\n    </Helmet>\r\n    <span role='img' aria-label='Loading'>\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-radius: 4px;\r\n  height: 180px;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require('../assets/noPosterSmall.png')\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role='img' aria-label='rating'>\r\n            ⭐\r\n          </span>{' '}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Poster from 'Components/Poster';\nimport Message from 'Components/Message';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomfilx</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title='Now Playing'>\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title='Upcoming Movies'>\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title='Popular Movies'>\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color='#e74c3c' text={error} />}\n      </Container>\n    )}\n    ;\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\napi.interceptors.request.use((config) => {\n  config.params = config.params || {};\n  config.params['api_key'] = 'b1787483882e9d736ff56a8bccadeb77';\n  config.params['language'] = 'en-US';\n  return config;\n});\n\nexport const MoviesApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upcoming: () => api.get('movie/upcoming'),\n  popular: () => api.get('movie/popular'),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  search: (term) =>\n    api.get('search/movie', {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const TVApi = {\n  topRated: () => api.get('tv/top_rated'),\n  popular: () => api.get('tv/popular'),\n  airingToday: () => api.get('tv/airing_today'),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  search: (term) =>\n    api.get('search/tv', {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const CollectionApi = {\n  collectionDetail: (id) => api.get(`collection/${id}`),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { MoviesApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await MoviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await MoviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await MoviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch (error) {\n      this.setState({\n        error: \"Can't find movie infomation.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Poster from 'Components/Poster';\r\nimport Message from 'Components/Message';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomfilx</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title='Top Rated Shows'>\r\n            {topRated.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title='Popular Shows'>\r\n            {popular.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title='Airing Today'>\r\n            {airingToday.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color='#e74c3c' text={error} />}\r\n      </Container>\r\n    )}{' '}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { TVApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await TVApi.topRated();\n      const {\n        data: { results: popular },\n      } = await TVApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await TVApi.airingToday();\n\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Poster from 'Components/Poster';\nimport Message from 'Components/Message';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  error,\n  searchTerm,\n  updateTerm,\n  handleSubmit\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomfilx</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder='Search Movies of TV Shows ...'\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title='Movie Results'>\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title='TV Show Results'>\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color='#e74c3c' text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text='Nothing found' color='#95a5a6' />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  updateTerm: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { MoviesApi, TVApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searcyByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searcyByTerm = async () => {\n    const { searchTerm } = this.state;\n\n    try {\n      this.setState({\n        loading: true\n      });\n      const {\n        data: { results: movieResults }\n      } = await MoviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await TVApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch (error) {\n      this.setState({\n        error: \"Can't find results.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ProfileContainer = styled.div`\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-size: ${(props) => (props.isCreator ? 'cover' : '60px')};\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ProfileTitle = styled.div`\r\n  color: #141414;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  line-height: 80px;\r\n  height: 80px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Profile = ({ result, isCreator = false }) => (\r\n  <>\r\n    <Container>\r\n      {result.map((p) => (\r\n        <ProfileContainer\r\n          key={`${p.id}_profile`}\r\n          bgUrl={\r\n            p.logo_path\r\n              ? `https://image.tmdb.org/t/p/w200/${p.logo_path}`\r\n              : `https://image.tmdb.org/t/p/w200/${p.profile_path}`\r\n          }\r\n          isCreator={isCreator}\r\n        >\r\n          <ProfileTitle key={`${p.id}_title`}>\r\n            {p.logo_path === null && p.name}\r\n            {p.profile_path === null && p.name}\r\n          </ProfileTitle>\r\n        </ProfileContainer>\r\n      ))}\r\n    </Container>\r\n  </>\r\n);\r\n\r\nProfile.propTypes = {\r\n  result: PropTypes.array.isRequired,\r\n  isCreator: PropTypes.bool,\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-radius: 4px;\r\n  height: 180px;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst AirDate = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Season = ({ id, posterPath, name, airDate }) => (\r\n  <Container>\r\n    <ImageContainer>\r\n      <Image\r\n        bgUrl={\r\n          posterPath\r\n            ? `https://image.tmdb.org/t/p/w300${posterPath}`\r\n            : require('../assets/noPosterSmall.png')\r\n        }\r\n      />\r\n    </ImageContainer>\r\n    <Title>{name.length > 18 ? `${name.substring(0, 18)}...` : name}</Title>\r\n    <AirDate>{airDate}</AirDate>\r\n  </Container>\r\n);\r\n\r\nSeason.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  posterPath: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  airDate: PropTypes.string,\r\n};\r\n\r\nexport default Season;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Loader from 'Components/Loader';\nimport Profile from 'Components/Profile';\nimport Season from 'Components/Season';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgUrl});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${(props) => props.bgUrl});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 20px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 20px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst ItemImage = styled.img`\n  width: 40px;\n  height: 20px;\n  margin-bottom: -5px;\n`;\n\nconst Item = styled.span``;\n\nconst ItemButton = ItemImage.withComponent('a');\n\nconst Divider = styled.span`\n  margin: 0px 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n  margin-bottom: 30px;\n`;\n\nconst ColletionContainer = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst ColletionImage = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  background-size: cover;\n  background-position: center center;\n  border-radius: 4px;\n  width: 125px;\n  height: 180px;\n  transition: opacity 0.2s linear;\n`;\n\nconst Seasons = styled.div`\n  width: 95%;\n  height: 260px;\n  overflow: hidden;\n  padding-left: 10px;\n  margin-bottom: 30px;\n  ::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n  ::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n    background-color: transparent;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 5px;\n    background-image: linear-gradient(to right, #0a090e, #d758ac, #2b376d);\n  }\n  &:hover {\n    overflow-y: scroll;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\nconst SeasonsGrid = styled.div`\n  margin-top: 10px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst MadeBy = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n`;\n\nconst VideoContainer = styled.div`\n  width: 95%;\n  overflow: hidden;\n  height: 210px;\n  display: flex;\n  ::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n  ::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n    background-color: transparent;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 5px;\n    background-image: linear-gradient(to right, #0a090e, #d758ac, #2b376d);\n  }\n  &:hover {\n    overflow-x: scroll;\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\nconst SubTitle = styled.h3`\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\nconst VideoImage = styled.iframe`\n  height: 200px;\n  width: 350px;\n  margin-right: 10px;\n`;\n\nconst VideoLink = VideoImage.withComponent('a');\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{' '}\n          | Nomfilx\n        </title>\n      </Helmet>\n      <Backdrop\n        bgUrl={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgUrl={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require('../../assets/noPosterSmall.png')\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            {result.imdb_id && (\n              <>\n                <ItemButton\n                  href={`https://www.imdb.com/title/${result.imdb_id}`}\n                  target='_blank'\n                >\n                  <ItemImage\n                    src={require('../../assets/imdb.png')}\n                    alt='IMDB Link'\n                  />\n                </ItemButton>\n                <Divider>•</Divider>\n              </>\n            )}\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {/* Movies */}\n              {result.production_countries &&\n                result.production_countries.map((p, i) =>\n                  i === result.production_countries.length - 1\n                    ? p.iso_3166_1\n                    : `${p.iso_3166_1} / `\n                )}\n              {/* TV Shows */}\n              {result.origin_country &&\n                result.origin_country.map((c, i) =>\n                  i === result.origin_country.length - 1 ? c : `${c} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          {/* collections */}\n          {result.belongs_to_collection && (\n            <>\n              <SubTitle>{result.belongs_to_collection.name}</SubTitle>\n              <ColletionContainer>\n                <Link to={`/collection/${result.belongs_to_collection.id}`}>\n                  <ColletionImage\n                    bgUrl={`https://image.tmdb.org/t/p/w300/${result.belongs_to_collection.poster_path}`}\n                  />\n                </Link>\n              </ColletionContainer>\n            </>\n          )}\n          {/* Seasons */}\n          {result.seasons && result.seasons.length > 0 && (\n            <>\n              <SubTitle>Seasons</SubTitle>\n              <Seasons>\n                <SeasonsGrid>\n                  {result.seasons.map((season) => (\n                    <Season\n                      key={season.id}\n                      id={season.id}\n                      name={season.name}\n                      posterPath={season.poster_path}\n                      airDate={season.air_date}\n                    />\n                  ))}\n                </SeasonsGrid>\n              </Seasons>\n            </>\n          )}\n          <MadeBy>\n            {/* production_companies */}\n            {result.production_companies &&\n              result.production_companies.length > 0 && (\n                <>\n                  <SubTitle>Production</SubTitle>\n                  <Profile result={result.production_companies} />\n                </>\n              )}\n            {/* created_by */}\n            {result.created_by && result.created_by.length > 0 && (\n              <>\n                <SubTitle>Creator</SubTitle>\n                <Profile result={result.created_by} isCreator={true} />\n              </>\n            )}\n          </MadeBy>\n\n          {result.videos &&\n            result.videos.results &&\n            result.videos.results.length > 0 && (\n              <>\n                <SubTitle>YouTube Videos</SubTitle>\n                <VideoContainer>\n                  {result.videos.results.map(\n                    (v) =>\n                      v.site === 'YouTube' && (\n                        <VideoLink\n                          key={`${v.key}_link`}\n                          href={`https://www.youtube.com/watch?v=${v.key}&feature=emb_title`}\n                          target='_blank'\n                        >\n                          <VideoImage\n                            key={`${v.key}_img`}\n                            src={`https://www.youtube.com/embed/${v.key}`}\n                          />\n                        </VideoLink>\n                      )\n                  )}\n                </VideoContainer>\n              </>\n            )}\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { MoviesApi, TVApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n\n    // check id is number\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await MoviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await TVApi.showDetail(parsedId));\n      }\n      console.log(result);\n    } catch (error) {\n      this.setState({ error: \"Can't found that Movie/Show\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Loader from 'Components/Loader';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgUrl});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${(props) => props.bgUrl});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n  padding: 50px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 20px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 20px;\n`;\n\nconst Overview = styled.p`\n  font-size: 16px;\n  opacity: 0.7;\n  line-height: 1.5;\n  margin-bottom: 30px;\n`;\n\nconst Poster = styled.div`\n  width: 120px;\n  height: 180px;\n  background-image: url(${(props) => props.bgUrl});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst SubContent = styled.div`\n  width: 100%;\n  display: flex;\n  position: relative;\n  z-index: 1;\n`;\n\nconst SubTitle = styled.h3`\n  font-size: 24px;\n  margin-bottom: 20px;\n`;\n\nconst SubOverview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n  margin-bottom: 30px;\n`;\n\nconst Divider = styled.div`\n  width: 100%;\n  border: 2px solid rgba(255, 255, 255, 0.1);\n  margin: 20px 0;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst ItemDivider = styled.span`\n  margin: 0px 10px;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.name} | Nomfilx</title>\n      </Helmet>\n      <Backdrop\n        bgUrl={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgUrl={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require('../../assets/noPosterSmall.png')\n          }\n        />\n        <Data>\n          <Title>\n            {result.name} ({result.parts.length} Movies)\n          </Title>\n          <Overview>{result.overview}</Overview>\n          <Divider />\n\n          {result.parts &&\n            result.parts.map((movie) => (\n              <Link to={`/movie/${movie.id}`}>\n                <SubContent key={`${movie.id}_content`}>\n                  <Poster\n                    key={`${movie.id}_poster`}\n                    bgUrl={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                        : require('../../assets/noPosterSmall.png')\n                    }\n                  />\n                  <Data key={`${movie.id}_data`}>\n                    <SubTitle key={`${movie.id}_title`}>\n                      {movie.original_title}\n                    </SubTitle>\n                    <ItemContainer>\n                      <Item>{movie.release_date}</Item>\n                      <ItemDivider>•</ItemDivider>\n                      <Item>{movie.original_language}</Item>\n                      <ItemDivider>•</ItemDivider>\n                      <Item>\n                        {movie.genre_ids &&\n                          movie.genre_ids.map((id, index) =>\n                            index === movie.genre_ids.length - 1\n                              ? id\n                              : `${id} / `\n                          )}\n                      </Item>\n                    </ItemContainer>\n                    <SubOverview key={`${movie.id}_overview`}>\n                      {movie.overview}\n                    </SubOverview>\n                  </Data>\n                </SubContent>\n                <Divider key={`${movie.id}_divider`} />\n              </Link>\n            ))}\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import CollectionContainer from './CollectionContainer';\n\nexport default CollectionContainer;\n","import React from 'react';\nimport CollectionPresenter from './CollectionPresenter';\nimport { CollectionApi } from '../../api';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n\n    // check id is number\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push('/');\n    }\n\n    let result = null;\n    try {\n      ({ data: result } = await CollectionApi.collectionDetail(parsedId));\n      console.log(result);\n    } catch (error) {\n      this.setState({ error: \"Can't found that Collection\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return (\n      <CollectionPresenter result={result} error={error} loading={loading} />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport Header from 'Components/Header';\nimport Home from 'Routes/Home';\nimport TV from 'Routes/TV';\nimport Search from 'Routes/Search';\nimport Detail from 'Routes/Detail';\nimport Collection from 'Routes/Collection';\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path='/' exact component={Home} />\n      <Route path='/tv' component={TV} />\n      <Route path='/search' component={Search} />\n      <Route path='/movie/:id' component={Detail} />\n      <Route path='/show/:id' component={Detail} />\n      <Route path='/collection/:id' component={Collection} />\n      <Redirect from='*' to='/' />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset}\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.StrictMode>\n        <Router />\n        <GlobalStyles />\n      </React.StrictMode>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}